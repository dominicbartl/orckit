openapi: 3.0.0
info:
  title: Full-Stack SaaS API
  version: 1.0.0
  description: API server for the full-stack SaaS application example

servers:
  - url: http://localhost:3000
    description: Development server

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API and its dependencies
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                  services:
                    type: object
                    properties:
                      database:
                        type: string
                        example: connected
                      redis:
                        type: string
                        example: connected
        '503':
          description: Service is unhealthy

  /api/users:
    get:
      summary: Get all users
      description: Retrieve a list of all users (with Redis caching)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  source:
                    type: string
                    enum: [cache, database]
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

    post:
      summary: Create a new user
      description: Create a new user in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                role:
                  type: string
                  enum: [admin, user]
                  default: user
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/stats:
    get:
      summary: Get application statistics
      description: Retrieve various statistics about the application
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUsers:
                    type: integer
                  activeUsers:
                    type: integer
                  totalRevenue:
                    type: number
                    format: float
                  newSignups:
                    type: integer

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        role:
          type: string
          enum: [admin, user]
        createdAt:
          type: string
          format: date-time
